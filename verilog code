`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 08/20/2021 08:48:56 PM
// Design Name: 
// Module Name: vending_machine
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////


 module vending_machine(bottle,clk,money,rst);

   output reg bottle;
   input [1:0] money;
   input clk,rst;
   reg [2:0]   state;
   reg [2:0]   next_state;


   parameter [2:0] s0=3'b000;
   parameter [2:0] s5=3'b001;
   parameter [2:0] s10=3'b010;
   parameter [2:0] s15=3'b011;
   parameter [2:0] s20=3'b100;
   parameter [2:0] s25=3'b101;

   always @(posedge clk)
     begin
       if (rst)
         state=s0;
       else
         state=next_state;
     end


   always @(state or money)
     begin
    case (state)
     s0:
        begin
           if (money==2'b00)
              next_state=s0;
           else if (money==2'b01)
              next_state=s5;
           else if (money==2'b10)
              next_state=s10;
           else if (money==2'b11)
              next_state=s20;
        end
       s5:
        begin
          if (money==2'b00)
            next_state=s5;
          else if (money==2'b01)
            next_state=s10;
          else if (money==2'b10)
            next_state=s15;
          else if (money==2'b11)
              next_state=s25;  
        end
       s10:
        begin
           if (money==2'b00)
             next_state=s10;
           else if (money==2'b01)
             next_state=s15;
           else if (money==2'b10)
             next_state=s20;
           else if (money==2'b11)
             next_state=s25;
                
         end
       s15:
        begin
           if (money==2'b00)
             next_state=s15;
           else if (money==2'b01)
             next_state=s20;
           else if (money==2'b10)
             next_state=s25;
           else if (money==2'b11)
              next_state=s25;
         end
       s20:
        begin
           if (money==2'b00)
             next_state=s20;
           else if (money==2'b01)
             next_state=s25;
           else if (money==2'b10)
             next_state=s25;
           else if (money==2'b11)
             next_state=s25;  
         end
       s25:
          begin
             next_state=s0;
          end
       default : next_state=s0;
   
    endcase  
   end  


   always @(state)
   begin
    case (state)
      s0 : bottle<=1'b0;
      s5 : bottle<=1'b0;
      s10: bottle<=1'b0;
      s15: bottle<=1'b0;
      s20: bottle<=1'b0;
      s25: bottle<=1'b1;
      default: bottle<=1'b0;
    endcase  
   end
 
endmodule
